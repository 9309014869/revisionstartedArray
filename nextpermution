first aproch using find all permution
search using linear search
next or first

optimize aproch is this using creaking or pivot element

import java.util.*;

public class Main {
    
    public static void nextPermutation(int[] a) {
        int n = a.length;
        int index = -1;
        
    
        for (int i = n - 2; i >= 0; i--) {
            if (a[i] < a[i + 1]) {
                index = i;
                break;
            }
        }

        if (index == -1) {
           
            reverse(a, 0, n - 1);
            return;
        }

    
        for (int i = n - 1; i > index; i--) {
            if (a[i] > a[index]) {
                swap(a, i, index);
                break;
            }
        }

       
        reverse(a, index + 1, n - 1);
    }

    public static void swap(int[] a, int i, int j) {
        int temp = a[i];
        a[i] = a[j];
        a[j] = temp;
    }

    public static void reverse(int[] a, int start, int end) {
        while (start < end) {
            swap(a, start, end);
            start++;
            end--;
        }
    }

    public static void main(String[] args) {
        int[] arr = { 2, 4, 1, 7, 5, 0 };
        nextPermutation(arr);

        for (int i = 0; i < arr.length; i++)
            System.out.print(arr[i] + " ");
    }
}
